version: "3.8"

volumes:
  data:
    
services:
  api:
    restart: always
    build: 
      context: /src/server
      dockerfile: Chat.API/Dockerfile
    container_name: api
    depends_on:
      - migrator
      - broker
    ports:
      - "8080:80"
      - "8081:443"
    environment:
      - BROKER_CONNECTION_SETTINGS__HOST=broker
      - BROKER_CONNECTION_SETTINGS__USER_NAME=${BROKER_USER_NAME}
      - BROKER_CONNECTION_SETTINGS__PASSWORD=${BROKER_PASSWORD}
      - POSTGRESQL_SETTINGS__HOST=db
      - POSTGRESQL_SETTINGS__USER_NAME=${DB_USER_NAME}
      - POSTGRESQL_SETTINGS__PASSWORD=${DB_PASSWORD}
      - POSTGRESQL_SETTINGS__DATABASE_NAME=${DB_NAME}
  
  migrator:
    restart: on-failure
    build:
      context: /src/server
      dockerfile: Chat.Migrator/Dockerfile
    container_name: migrator
    depends_on:
      - db
    environment:
      - POSTGRESQL_SETTINGS__HOST=db
      - POSTGRESQL_SETTINGS__USER_NAME=${DB_USER_NAME}
      - POSTGRESQL_SETTINGS__PASSWORD=${DB_PASSWORD}
      - POSTGRESQL_SETTINGS__DATABASE_NAME=${DB_NAME}
      
  broker:
    image: ${RABBITMQ_IMAGE}
    container_name: broker
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=${BROKER_USER_NAME}
      - RABBITMQ_DEFAULT_PASS=${BROKER_PASSWORD}
    volumes:
      - ~/broker/data:/var/lib/rabbitmq
      - ~/broker/logs:/var/log/rabbitmq
  
  web-front:
    restart: always
    build:
      context: /src/client
      dockerfile: Dockerfile
    container_name: web-front
    depends_on:
      - broker
    ports:
      - "3000:80"
      - "3001:443"
        
  db:
    image: ${DB_IMAGE}
    container_name: db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ~/db/data:/var/lib/postgresql