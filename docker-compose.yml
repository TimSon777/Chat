version: "3.8"

volumes:
  data:
    
services:
  
  queue-listener:
    restart: always
    depends_on:
      - broker
      - db
    build:
      context: src/server
      dockerfile: Dockerfile_QueueListener
    container_name: queue-listener
    ports:
      - "8085:80"
      - "8086:443"
    environment:
      POSTGRESQL_SETTINGS__HOST: db
      POSTGRESQL_SETTINGS__USER_NAME: ${DB_USER_NAME}
      POSTGRESQL_SETTINGS__PASSWORD: ${DB_PASSWORD}
      POSTGRESQL_SETTINGS__DATABASE_NAME: ${DB_NAME}
      
      BROKER_CONNECTION_SETTINGS__HOST: broker
      BROKER_CONNECTION_SETTINGS__USER_NAME: ${BROKER_USER_NAME}
      BROKER_CONNECTION_SETTINGS__PASSWORD: ${BROKER_PASSWORD}
    
  file-server:
    image: ${S3_IMAGE}
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_password
    volumes:
      - minio-storage:/data
  
  file-api:
    restart: always
    build:
      context: /src/server/File
      dockerfile: File.API/Dockerfile
    ports:
      - "8082:80"
      - "8083:443"
    environment:
      FILE_SERVER_SETTINGS__HOST: http://file-server:9000
      FILE_SERVER_SETTINGS__USER: ${S3_USER}
      FILE_SERVER_SETTINGS__PASSWORD: ${S3_PASSWORD}

  api:
    restart: always
    build: 
      context: src/server
      dockerfile: Dockerfile_ForumAPI
    container_name: api
    depends_on:
      - migrator
      - broker
    ports:
      - "8080:80"
      - "8081:443"
    environment:
      POSTGRESQL_SETTINGS__HOST: db
      POSTGRESQL_SETTINGS__USER_NAME: ${DB_USER_NAME}
      POSTGRESQL_SETTINGS__PASSWORD: ${DB_PASSWORD}
      POSTGRESQL_SETTINGS__DATABASE_NAME: ${DB_NAME}
      
      ORIGIN__FRONT: ${ORIGIN_FRONT}
      
      BROKER_CONNECTION_SETTINGS__HOST: broker
      BROKER_CONNECTION_SETTINGS__USER_NAME: ${BROKER_USER_NAME}
      BROKER_CONNECTION_SETTINGS__PASSWORD: ${BROKER_PASSWORD}
  
  migrator:
    restart: on-failure
    build:
      context: src/server
      dockerfile: Dockerfile_ForumMigrator
    container_name: migrator
    depends_on:
      - db
    environment:
      POSTGRESQL_SETTINGS__HOST: db
      POSTGRESQL_SETTINGS__USER_NAME: ${DB_USER_NAME}
      POSTGRESQL_SETTINGS__PASSWORD: ${DB_PASSWORD}
      POSTGRESQL_SETTINGS__DATABASE_NAME: ${DB_NAME}
      
  web-front:
    restart: always
    depends_on:
      - api
    build:
      context: src/client
      dockerfile: Dockerfile
    container_name: web-front
    ports:
      - "3000:80"
      - "3001:443"
        
  db:
    image: ${DB_IMAGE}
    container_name: db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ~/db/data:/var/lib/postgresql
  
  broker:
    image: ${RABBITMQ_IMAGE}
    container_name: broker
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: ${BROKER_USER_NAME}
      RABBITMQ_DEFAULT_PASS: ${BROKER_PASSWORD}
    volumes:
      - ~/broker/data:/var/lib/rabbitmq
      - ~/broker/logs:/var/log/rabbitmq